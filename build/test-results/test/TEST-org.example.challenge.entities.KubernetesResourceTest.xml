<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.example.challenge.entities.KubernetesResourceTest" tests="2" skipped="0" failures="0" errors="0" timestamp="2023-12-28T09:46:40" hostname="Ezequiels-MacBook-Pro.local" time="2.764">
  <properties/>
  <testcase name="testPrimaryConstructor()" classname="org.example.challenge.entities.KubernetesResourceTest" time="2.748"/>
  <testcase name="testSecondaryConstructor()" classname="org.example.challenge.entities.KubernetesResourceTest" time="0.007"/>
  <system-out><![CDATA[06:46:40.858 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for HasMetadata name=#1
06:46:42.827 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for ObjectMeta name=child of #1#2
06:46:42.848 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering ObjectMeta(child of #1#2) on HasMetadata(#1).getMetadata()
06:46:42.849 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering uid123 on ObjectMeta(child of #1#2).getUid()
06:46:42.849 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering ObjectMeta(child of #1#2) on HasMetadata(#1).getMetadata()
06:46:42.850 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering TestResource on ObjectMeta(child of #1#2).getName()
06:46:42.861 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering true on HasMetadata(#1).equals(HasMetadata(#1))
06:46:42.891 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for HasMetadata name=#3
06:46:42.894 [Test worker] DEBUG io.mockk.impl.instantiation.AbstractMockFactory - Creating mockk for ObjectMeta name=child of #3#4
06:46:42.897 [Test worker] DEBUG io.mockk.impl.recording.states.AnsweringState - Answering true on HasMetadata(#3).equals(HasMetadata(#3))
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
